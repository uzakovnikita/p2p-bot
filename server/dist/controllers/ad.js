"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllAds = exports.getAdById = exports.getAdIds = exports.setAdId = exports.getAdId = void 0;
var constants_1 = require("../constants");
var db_1 = require("../db");
var _utils_1 = require("./_utils");
var constants_2 = require("./constants");
var getAdId = function (req, res) {
    var currentAd = (0, _utils_1.getRequestedAdFromDb)(req);
    if (currentAd) {
        return res.status(200).json({ id: currentAd.id, status: constants_2.ApiStatuses.Ok });
    }
    return res
        .status(400)
        .json({ status: constants_2.ApiStatuses.Error, error: constants_1.Errors.AdNotFound });
};
exports.getAdId = getAdId;
var setAdId = function (req, res) {
    var _a = req.body, id = _a.id, ad = _a.ad;
    var currentAd = (0, _utils_1.getAdFromDb)(ad);
    if (currentAd && id) {
        currentAd.id = id;
        return res.status(200).json({ id: currentAd.id, status: constants_2.ApiStatuses.Ok });
    }
    return res
        .status(400)
        .json({ status: constants_2.ApiStatuses.Error, error: constants_1.Errors.AdNotFound });
};
exports.setAdId = setAdId;
var getAdIds = function (req, res) {
    return res
        .status(200)
        .json({ ids: db_1.db.ads.map(function (ad) { return ad.id; }), status: constants_2.ApiStatuses.Ok });
};
exports.getAdIds = getAdIds;
var getAdById = function (req, res) {
    var currentAd = (0, _utils_1.getRequestedAdFromDb)(req);
    if (currentAd) {
        return res.status(200).json({ ad: currentAd, status: constants_2.ApiStatuses.Ok });
    }
    return res.status(400).json({
        status: constants_2.ApiStatuses.Error,
        error: constants_1.Errors.AdNotFound,
    });
};
exports.getAdById = getAdById;
var getAllAds = function (req, res) {
    return res.status(200).json({ ads: db_1.db.ads, status: constants_2.ApiStatuses.Ok });
};
exports.getAllAds = getAllAds;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9jb250cm9sbGVycy9hZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSwwQ0FBc0M7QUFDdEMsNEJBQTJCO0FBQzNCLG1DQUE2RDtBQUM3RCx5Q0FBMEM7QUFFbkMsSUFBTSxPQUFPLEdBQW1CLFVBQUMsR0FBRyxFQUFFLEdBQUc7SUFDOUMsSUFBTSxTQUFTLEdBQUcsSUFBQSw2QkFBb0IsRUFBQyxHQUFHLENBQUMsQ0FBQztJQUU1QyxJQUFJLFNBQVMsRUFBRSxDQUFDO1FBQ2QsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSx1QkFBVyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDNUUsQ0FBQztJQUVELE9BQU8sR0FBRztTQUNQLE1BQU0sQ0FBQyxHQUFHLENBQUM7U0FDWCxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsdUJBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLGtCQUFNLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztBQUNuRSxDQUFDLENBQUM7QUFWVyxRQUFBLE9BQU8sV0FVbEI7QUFFSyxJQUFNLE9BQU8sR0FBbUIsVUFBQyxHQUFHLEVBQUUsR0FBRztJQUN4QyxJQUFBLEtBQWEsR0FBRyxDQUFDLElBQUksRUFBbkIsRUFBRSxRQUFBLEVBQUUsRUFBRSxRQUFhLENBQUM7SUFDNUIsSUFBTSxTQUFTLEdBQUcsSUFBQSxvQkFBVyxFQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRWxDLElBQUksU0FBUyxJQUFJLEVBQUUsRUFBRSxDQUFDO1FBQ3BCLFNBQVMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBRWxCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsdUJBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxPQUFPLEdBQUc7U0FDUCxNQUFNLENBQUMsR0FBRyxDQUFDO1NBQ1gsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLHVCQUFXLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxrQkFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7QUFDbkUsQ0FBQyxDQUFDO0FBYlcsUUFBQSxPQUFPLFdBYWxCO0FBRUssSUFBTSxRQUFRLEdBQW1CLFVBQUMsR0FBRyxFQUFFLEdBQUc7SUFDL0MsT0FBTyxHQUFHO1NBQ1AsTUFBTSxDQUFDLEdBQUcsQ0FBQztTQUNYLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFDLEVBQUUsSUFBSyxPQUFBLEVBQUUsQ0FBQyxFQUFFLEVBQUwsQ0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLHVCQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUN0RSxDQUFDLENBQUM7QUFKVyxRQUFBLFFBQVEsWUFJbkI7QUFFSyxJQUFNLFNBQVMsR0FBbUIsVUFBQyxHQUFHLEVBQUUsR0FBRztJQUNoRCxJQUFNLFNBQVMsR0FBRyxJQUFBLDZCQUFvQixFQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTVDLElBQUksU0FBUyxFQUFFLENBQUM7UUFDZCxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsdUJBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pFLENBQUM7SUFFRCxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzFCLE1BQU0sRUFBRSx1QkFBVyxDQUFDLEtBQUs7UUFDekIsS0FBSyxFQUFFLGtCQUFNLENBQUMsVUFBVTtLQUN6QixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFYVyxRQUFBLFNBQVMsYUFXcEI7QUFFSyxJQUFNLFNBQVMsR0FBbUIsVUFBQyxHQUFHLEVBQUUsR0FBRztJQUNoRCxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQUUsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLHVCQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUN2RSxDQUFDLENBQUM7QUFGVyxRQUFBLFNBQVMsYUFFcEIifQ==